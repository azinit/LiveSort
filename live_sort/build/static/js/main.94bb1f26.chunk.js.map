{"version":3,"sources":["layouts/UserPanel/InfoBlock/logo.png","audio/music/background_fire.mp3","audio/music/background_fluid.mp3","audio/music/background_engage.mp3","audio/music/background_person.mp3","audio/music/background_light.mp3","layouts/ViewPanel/ViewSwticher/view_array.jpg","layouts/ViewPanel/ViewSwticher/view_bubble.jpg","layouts/ViewPanel/ViewSwticher/view_column.jpg","layouts/UserPanel/InfoBlock/InfoBlock.js","components/Slider/Slider.js","lib/utils/nums.js","lib/utils/array.js","components/Slider/MusicSlider/MusicSlider.js","components/Slider/SpeedSlider/SpeedSlider.js","components/Slider/CountSlider/CountSlider.js","layouts/UserPanel/Settings/Settings.js","layouts/UserPanel/Copyright/Copyright.js","layouts/UserPanel/NavPanel.js","layouts/ViewPanel/ViewBar/ViewBar.js","components/View/Element/Element.js","lib/utils/misc.js","components/View/List/List.js","components/View/View.js","components/View/Thumbnail/Thumbnail.js","layouts/ViewPanel/ViewSwticher/ViewSwitcher.js","lib/sort/BubbleSort.js","layouts/ViewPanel/ViewPanel.js","components/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","InfoBlock","LIVE_SORT_ANCHOR","react_default","a","createElement","href","className","target","rel","src","logo","alt","Component","Slider","SLIDER_DISABLED","state","value","_this","props","label","labelEnabled","isToggleble","onToggle","rangeDOM","React","createRef","onClick","e","force","current","_this$props","labelDisabled","classList","toggle","disabled","isEnabled","contains","console","log","onChange","setState","nextProps","nextState","nextContext","isValueUpdated","this","isSliderSwitchDisabled","undefined","label_hover","step","min","max","children","concat","type","ref","getRandomInt","arguments","length","Math","floor","random","getRandomArray","n","array","i","push","id","range","Object","toConsumableArray","Array","keys","swap","j","controller","_ref","handlerSwap","MusicSlider","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changeVolume","newVolume","audio","volume","getRandomMusic","music_fire","music_fluid","music_engage","music_person","music_light","switchMusic","music","togglePlaying","isPlaying","playbackRate","pause","play","react","components_Slider_Slider","onEnded","autoPlay","SpeedSlider","changeSpeed","val","CountSlider","changeAmount","Settings","expanded","settings","sliders","expand","handlerCount","handlerSpeed","isSorting","Slider_MusicSlider_MusicSlider","Slider_SpeedSlider_SpeedSlider","Slider_CountSlider_CountSlider","Copyright","NavPanel","DOM","handlerToggle","UserPanel_InfoBlock_InfoBlock","UserPanel_Settings_Settings","UserPanel_Copyright_Copyright","ViewBar","onSort","onGenerate","Element","click","element","reset","STATE_SELECTED","STATE_ACTIVE","STATE_DISABLED","setSelected","mode","setActive","setDisabled","setHidden","STATE_HIDDEN","operationCode","classState","add","remove","_this2","li","sleep","ms","Promise","resolve","setTimeout","List","computeElements","data","elementsDOM","elements","map","el","View_Element_Element","key","get","size","indices","_len2","_key2","forEach","_len3","_key3","_len4","_key4","hideAll","apply","showAll","_this3","_len5","_key5","resetAll","_this4","slice","View","hide","list","show","showEvery","passAll","iterations","activeClass","active","View_List_List","Thumbnail","disabledClass","ViewSwitcher","computeThumbnails","labels","sources","thumb_array","thumb_bubble","thumb_column","View_Thumbnail_Thumbnail","onSwitch","thumbnails","timeInterval","viewPanel","speed","_callee","callback_finished","values","views","lists","arr","_loop","regenerator_default","wrap","_context3","prev","next","mark","_loop2","_context2","_context","l","stop","delegateYield","bubbleSort","ViewPanel","computeViews","refList","arrayView","bubbleView","components_View_View","viewsPassAll","v","count","handlerGenerate","handlerSort","assertThisInitialized","handlerSwitch","newActive","ViewPanel_ViewBar_ViewBar","ViewSwticher_ViewSwitcher","App","NAV_DOM","navPanel","handlerSetCount","handlerSetSpeed","isMusicOn","areSoundsOn","layouts_UserPanel_NavPanel","layouts_ViewPanel_ViewPanel","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.94bb1f26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d57d2364.png\";","module.exports = __webpack_public_path__ + \"static/media/background_fire.3db3b71f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/background_fluid.d09e3db6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/background_engage.c8813b6d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/background_person.e3fcf07a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/background_light.1bb0ceef.mp3\";","module.exports = __webpack_public_path__ + \"static/media/view_array.6f776815.jpg\";","module.exports = __webpack_public_path__ + \"static/media/view_bubble.3929532c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/view_column.7b795b65.jpg\";","import React, {Component} from 'react';\r\nimport logo from './logo.png'\r\nimport \"./InfoBlock.css\"\r\n\r\nclass InfoBlock extends Component {\r\n    render() {\r\n        let LIVE_SORT_URL    = \"https://github.com/martis-boolean/LiveSort\";\r\n        let VACANCY_URL      = \"https://kazan.hh.ru/vacancy/31829891\";\r\n        let LIVE_SORT_ANCHOR = <a href={LIVE_SORT_URL} className=\"text_main\" target=\"_blank\"\r\n                                  rel=\"noopener noreferrer\">LiveSort!</a>;\r\n        return (\r\n            <div className=\"nav-panel__info-block block_expanded\">\r\n                <div className=\"info-block__top\">\r\n                    <h2 className=\"nav-panel__header header text_fancy\">Welcome</h2>\r\n                    <div className=\"text-block\">\r\n                        <p className=\"text-block__paragraph text\">Hello, Guest! This is my&nbsp;{LIVE_SORT_ANCHOR}</p>\r\n                    </div>\r\n                    <div className=\"text-block\">\r\n                        <p className=\"text-block__paragraph text\">Usage is simple:</p>\r\n                        <p className=\"text-block__paragraph text\">— Set amount of elements in test set</p>\r\n                        <p className=\"text-block__paragraph text\">— Generate new elements if needed</p>\r\n                        <p className=\"text-block__paragraph text\">— Select more pleasant view</p>\r\n                        <p className=\"text-block__paragraph text text_muted\">⠀⠀(or do it in process)</p>\r\n                        <p className=\"text-block__paragraph text\">— Run sort</p>\r\n                        <p className=\"text-block__paragraph text text_muted\">⠀⠀(while available only BubbleSort)</p>\r\n                        <p className=\"text-block__paragraph text\">— Look and relax</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"info-block__bottom block block_expanded\">\r\n                    <a href={VACANCY_URL} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                        <img className=\"info-block__logo logo\" src={logo} alt=\"Logo\"/>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InfoBlock;","import React, {Component} from 'react';\r\nimport './Slider.css'\r\n\r\n// https://codesandbox.io/s/318jw3jjkq\r\n\r\nclass Slider extends Component {\r\n\r\n    SLIDER_DISABLED = \"slider__range_disabled\";\r\n\r\n    state           = {\r\n        value:      this.props.value || 50,\r\n    };\r\n\r\n    label       = this.props.labelEnabled;\r\n    isToggleble = this.props.onToggle;\r\n    rangeDOM    = React.createRef();\r\n\r\n    /** Is needed to update Slider? **/\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const isValueUpdated          = nextState.value !== this.state.value;\r\n        const isSliderSwitchDisabled  = this.props.disabled !== undefined && nextProps.disabled !== this.props.disabled;\r\n        const isSliderToggled         = \"---\";\r\n        return isValueUpdated || isSliderSwitchDisabled || isSliderToggled;\r\n    }\r\n\r\n    /** Update if available to slide **/\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        const isSliderSwitchDisabled  = this.props.disabled !== undefined && nextProps.disabled !== this.props.disabled;\r\n\r\n        if (isSliderSwitchDisabled) {\r\n            this.onClick(null, true);\r\n            this.isToggleble = (nextProps.disabled) ? false : this.props.onToggle;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let label_hover = (this.isToggleble) ? \"text_hover\" : \"\";\r\n        let value       = this.state.value;\r\n        let step        = this.props.step || 5;\r\n        let min         = this.props.min  || 0;\r\n        let max         = this.props.max  || 100;\r\n\r\n        return (\r\n            <div className=\"slider\">\r\n                {this.props.children}\r\n                <p className={`slider__label text ${label_hover} b_unselectable`} onClick={this.onClick}>\r\n                    {`${this.label }: ${value}`}\r\n                </p>\r\n                <input\r\n                    min={min} max={max} step={step} value={value}\r\n                    type=\"range\" className=\"slider__range\"\r\n                    onChange={this.onChange}\r\n                    ref={this.rangeDOM}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Disable/Enable slider\r\n    onClick = (e, force) => {\r\n        if (this.isToggleble || force) {\r\n            // init args\r\n            let rangeDOM = this.rangeDOM.current;\r\n            let {labelEnabled, labelDisabled} = this.props;\r\n\r\n            // togglePlaying Slider\r\n            rangeDOM.classList.toggle(this.SLIDER_DISABLED);\r\n            rangeDOM.disabled = !rangeDOM.disabled;\r\n            // togglePlaying Label\r\n            if (labelDisabled) {\r\n                let isEnabled = !rangeDOM.classList.contains(this.SLIDER_DISABLED);\r\n                this.label = (isEnabled) ? labelEnabled : labelDisabled;\r\n            }\r\n            // togglePlaying Parent\r\n            if (this.isToggleble)   this.props.onToggle();\r\n        } else {\r\n            console.log(\"Impossible to toggle!\");\r\n        }\r\n\r\n    };\r\n\r\n    // Change slider value\r\n    onChange = (e) => {\r\n        let value = e.target.value;\r\n        this.props.onChange(value);\r\n        this.setState({ value: value });\r\n    };\r\n}\r\n\r\nexport default Slider;","/** Get random int from range(min, max) **/\r\nfunction getRandomInt(max, min=4) {\r\n    return Math.floor(Math.random() * Math.floor(max - min)) + min;\r\n}\r\n\r\n/** Generate random array **/\r\nfunction getRandomArray(n) {\r\n    // n = n || getRandomInt(8);\r\n\r\n    let array = [];\r\n    for (let i = 0; i < n; i++) {\r\n        array.push({\r\n           id: i,\r\n           value: getRandomInt(15, 0),\r\n        });\r\n    }\r\n    return array;\r\n}\r\n\r\nexport {getRandomInt, getRandomArray}","import {getRandomInt} from \"./nums\";\r\n\r\nfunction randomChoice(array) {\r\n    let ind = getRandomInt(array.length, 0);\r\n    return array[ind];\r\n}\r\n\r\nfunction range(n) {\r\n    return [...Array(n).keys()];\r\n}\r\n\r\nfunction swap(i, j, array, controller=null) {\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n    if (controller) controller.handlerSwap(i, j);\r\n}\r\n\r\nexport {randomChoice, range, swap}","import React, {Component, Fragment} from 'react';\r\nimport Slider from \"../Slider\";\r\nimport music_fire from '../../../audio/music/background_fire.mp3'\r\nimport music_fluid from '../../../audio/music/background_fluid.mp3'\r\nimport music_engage from '../../../audio/music/background_engage.mp3'\r\nimport music_person from '../../../audio/music/background_person.mp3'\r\nimport music_light from '../../../audio/music/background_light.mp3'\r\nimport {randomChoice} from \"../../../lib/utils/array\";\r\n\r\n/** Music control settings slider **/\r\nclass MusicSlider extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isPlaying: true,\r\n            volume: 0.5,\r\n            music: this.getRandomMusic()\r\n        };\r\n        this.audio = React.createRef();\r\n    }\r\n\r\n    // Set initial volume\r\n    componentDidMount() { this.audio.current.volume = this.state.volume }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Slider\r\n                    labelEnabled={\"[ ▶ ] Music\"} labelDisabled={\"[ ▷ ] Music\"}\r\n                    value={this.state.volume * 100}\r\n                    onToggle={this.togglePlaying}\r\n                    onChange={this.changeVolume}\r\n                >\r\n                    <audio ref={this.audio} src={this.state.music} onEnded={this.switchMusic} autoPlay/>\r\n                </Slider>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    // Change volume of music\r\n    changeVolume = (value) => {\r\n        let newVolume = value  / 100;\r\n        this.audio.current.volume = newVolume;\r\n        this.setState({ volume: newVolume });\r\n    };\r\n\r\n    getRandomMusic = () => randomChoice([music_fire, music_fluid, music_engage, music_person, music_light]);\r\n\r\n    // https://stackoverflow.com/questions/9346579/how-can-i-tell-when-an-html5-audio-element-has-finished-playing\r\n    switchMusic = () => { this.setState({music: this.getRandomMusic()}) };\r\n\r\n    // Play (on/off) music\r\n    togglePlaying = () => {\r\n        let isPlaying = this.state.isPlaying;\r\n        let music     = this.audio.current;\r\n\r\n        music.playbackRate=1;\r\n\r\n        if (isPlaying)  { music.pause(); }\r\n        else            { music.play();  }\r\n\r\n        this.setState({ isPlaying: !isPlaying });\r\n\r\n    };\r\n}\r\n\r\nexport default MusicSlider;","import React, {Component, Fragment} from 'react';\r\nimport Slider from \"../Slider\";\r\n\r\n/** Set speed of sorting as settings slider **/\r\nclass SpeedSlider extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n\r\n                <Slider\r\n                    labelEnabled={\"Sort speed\"}\r\n                    value={1}\r\n                    step={0.25}\r\n                    min={0.25}\r\n                    max={8}\r\n                    // onToggle={this.toggleProcess}\r\n                    onChange={this.changeSpeed}\r\n                />\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    changeSpeed = (val) => { this.props.onChange(+val)};\r\n}\r\n\r\nexport default SpeedSlider;","import React, {Component, Fragment} from 'react';\r\nimport Slider from \"../Slider\";\r\n\r\n/** Count of elements settings slider **/\r\nclass CountSlider extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Slider\r\n                    labelEnabled={\"Amount of elements\"}\r\n                    value={8}\r\n                    onChange={this.changeAmount}\r\n                    max={16}\r\n                    min={4}\r\n                    step={1}\r\n                    disabled={this.props.disabled}\r\n                />\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    changeAmount = (val) => { this.props.onChange(val) };\r\n}\r\n\r\nexport default CountSlider;","import React, {Component} from 'react';\r\nimport MusicSlider from \"../../../components/Slider/MusicSlider/MusicSlider\";\r\nimport SpeedSlider from \"../../../components/Slider/SpeedSlider/SpeedSlider\";\r\nimport CountSlider from \"../../../components/Slider/CountSlider/CountSlider\";\r\nimport './Settings.css'\r\n\r\n\r\nclass Settings extends Component {\r\n    state = {\r\n        expanded: true\r\n    };\r\n    settings    = React.createRef();\r\n    sliders     = React.createRef();\r\n    label       = React.createRef();\r\n\r\n    render() {\r\n        const {handlerCount, handlerSpeed, isSorting} = this.props;\r\n        const label              = (this.state.expanded) ? \"Settings\" : \"⚙\";\r\n        return (\r\n            <div className=\"nav-panel__inner-block nav-panel__settings settings block_expanded\" ref={this.settings}>\r\n                <h2 className=\"nav-panel__header header text_fancy text_hover\" onClick={this.expand} ref={this.label}>\r\n                    {label}\r\n                </h2>\r\n                <div className=\"settings__sliders\" ref={this.sliders}>\r\n                    <MusicSlider/>\r\n                    <SpeedSlider onChange={handlerSpeed}/>\r\n                    <CountSlider onChange={handlerCount} disabled={isSorting}/>\r\n                    {/*Sounds https://codepen.io/tracer223/pen/oaEvEe?editors=0010*/}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    expand = () => {\r\n        this.sliders.current.classList.toggle(\"b_hidden\");\r\n        this.settings.current.classList.toggle('nav-panel__inner-block');\r\n        this.label.current.classList.toggle('text_fancy');\r\n        this.setState({expanded: !this.state.expanded})\r\n    }\r\n}\r\n\r\nexport default Settings;","import React, {Component} from 'react';\r\n\r\nclass Copyright extends Component {\r\n    render() {\r\n        const COMPANY_URL = \"https://kazan.hh.ru/employer/67611\";\r\n        return (\r\n            <div className=\"copyright block\">\r\n               <p className=\"copyright-text subtext\">\r\n                   Developed for&nbsp;\r\n                   <a className=\"copyright__link\" href={COMPANY_URL}\r\n                       target=\"_blank\" rel=\"noopener noreferrer\"\r\n                   >@Tensor</a>\r\n               </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Copyright;","import React, {Component} from 'react';\r\nimport './NavPanel.css'\r\nimport InfoBlock from \"./InfoBlock/InfoBlock\";\r\nimport Settings from \"./Settings/Settings\";\r\nimport Copyright from \"./Copyright/Copyright\";\r\n\r\nclass NavPanel extends Component {\r\n    DOM     = React.createRef();\r\n\r\n    render() {\r\n        const {handlerCount, handlerSpeed, isSorting} = this.props;\r\n        return (\r\n            <div className=\"nav-panel\" ref={this.DOM}>\r\n                <button className=\"nav-panel__close-btn btn btn_inline\" onClick={this.props.handlerToggle}>\r\n                    &times;\r\n                </button>\r\n                <InfoBlock/>\r\n                <Settings\r\n                    isSorting={isSorting}\r\n                    handlerSpeed={handlerSpeed}\r\n                    handlerCount={handlerCount}\r\n                />\r\n                <Copyright/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavPanel;","import React, {Component} from 'react';\r\n\r\n/** View control bar **/\r\nclass ViewBar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"view-panel__bar block\">\r\n                <button className=\"view-panel__btn btn\" onClick={this.props.onToggle}>&#9776;</button>\r\n                <button className=\"view-panel__btn btn\" onClick={this.props.onSort}>▶</button>\r\n                <button className=\"view-panel__btn btn\" onClick={this.props.onGenerate}>⟳</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewBar;","import React, {Component} from 'react';\r\n\r\n/** Element of List ([0], [1], ...) **/\r\nclass Element extends Component {\r\n    DOM = React.createRef();\r\n\r\n    componentWillMount() {\r\n        let {className} = this.props;\r\n        this.STATE_SELECTED     = `${className}_selected`;\r\n        this.STATE_ACTIVE       = `${className}_active`;\r\n        this.STATE_DISABLED     = `${className}_disabled`;\r\n        this.STATE_HIDDEN       = \"b_hidden\";\r\n    }\r\n\r\n    render() {\r\n        let {className, children} = this.props;\r\n        return (\r\n            <li\r\n                className={`list__element block ${className} b_unselectable`}\r\n                onClick={this.click}\r\n                ref={li => this.DOM = li}\r\n            >\r\n                {children}\r\n            </li>\r\n        );\r\n    }\r\n\r\n    /****************************** METHODS SUMMARY ******************************/\r\n\r\n    click = () => { console.log(this.props.element.value) };\r\n\r\n    reset = () => {\r\n        this.toggle(-1, this.STATE_SELECTED);\r\n        this.toggle(-1, this.STATE_ACTIVE);\r\n        this.toggle(-1, this.STATE_DISABLED);\r\n    };\r\n\r\n    // Set appearance for element\r\n    setSelected = (mode=true) => { this.toggle(mode ? 1 : -1, this.STATE_SELECTED) };\r\n    setActive   = (mode=true) => { this.toggle(mode ? 1 : -1, this.STATE_ACTIVE )  };\r\n    setDisabled = (mode=true) => { this.toggle(mode ? 1 : -1, this.STATE_DISABLED) };\r\n    setHidden   = (mode=true) => { this.toggle(mode ? 1 : -1, this.STATE_HIDDEN)   };\r\n\r\n\r\n    // Toggle classState (on/off) on element\r\n    toggle = (operationCode, classState) => {\r\n        if (this.DOM) {\r\n            let classList = this.DOM.classList;\r\n            switch (operationCode) {\r\n                case 1:\r\n                    classList.add(classState);\r\n                    break;\r\n                case -1:\r\n                    classList.remove(classState);\r\n                    break;\r\n                default:\r\n                    classList.toggle(classState);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Element;","/** Extract all **/\r\nfunction extract_all(src, key) {\r\n    return src.map(e => e[key])\r\n}\r\n\r\n/** Sleep (ms) time **/\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n// function sleep(milliseconds) {\r\n//     var start = new Date().getTime();\r\n//     for (var i = 0; i < 1e7; i++) {\r\n//         if ((new Date().getTime() - start) > milliseconds){\r\n//             break;\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport {sleep, extract_all}","import React, {Component} from 'react';\r\nimport Element from \"../Element/Element\";\r\nimport {sleep} from \"../../../lib/utils/misc\";\r\n\r\n/** View List for managing Elements **/\r\nclass List extends Component {\r\n    componentWillMount() {\r\n        this.computeElements(this.props.elements);\r\n    }\r\n\r\n    render() {\r\n        const elements = this.elements;\r\n        const {className} = this.props;\r\n        return (\r\n            <ul className={`list block ${className}`}>\r\n                {elements}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    /** Get ElementListDOM with parameters **/\r\n    computeElements = (data) => {\r\n        let elementsDOM  = [];\r\n        const className  = `${this.props.className}__element`;\r\n        let elements     = data.map(el =>\r\n            <Element\r\n                key={el.id}\r\n                element={el}\r\n                ref={(el) => elementsDOM.push(el)}\r\n                className={className}\r\n            >\r\n                {el.value}\r\n            </Element>\r\n        );\r\n\r\n        this.elements    = elements;\r\n        this.elementsDOM = elementsDOM;\r\n    };\r\n\r\n    /** Update list if updated props.elements **/\r\n    componentWillUpdate(nextProps, nextState, nextContext) { this.computeElements(nextProps.elements) }\r\n\r\n    get             = (i)   => this.elementsDOM[i];\r\n    size            = ()    => this.elements.length;\r\n    indices         = ()    => Array(this.size()).keys();\r\n\r\n    /****************************** ELEMENT METHODS ******************************/\r\n    // Set appearance for elements\r\n    setSelected = (mode, ...indices) => { indices.forEach(i => this.get(i).setSelected(mode)) };\r\n    setActive   = (mode, i, j)       => { [i, j].forEach( i => this.get(i).setActive(mode))   };\r\n    setDisabled = (mode, ...indices) => { indices.forEach(i => this.get(i).setDisabled(mode)) };\r\n    setHidden   = (mode, ...indices) => { indices.forEach(i => this.get(i).setHidden(mode))   };\r\n    hideAll     = ()                 => { this.setHidden(true, ...this.indices())                };\r\n    showAll     = ()                 => { this.setHidden(false, ...this.indices())               };\r\n    reset       = (...indices)       => { indices.forEach(i => this.get(i).reset())           };\r\n    resetAll    = ()                 => { this.reset(...this.indices())                                 };\r\n\r\n\r\n    /****************************** COLLECTION METHODS ******************************/\r\n\r\n    // pass all list with pauses\r\n    async passAll() {\r\n        for (let el of this.elementsDOM.slice()) {\r\n            el.setSelected();\r\n            await sleep(150);\r\n            el.reset();\r\n        }\r\n    };\r\n\r\n    // show every element\r\n    async showEvery() {\r\n        await sleep(500);\r\n        for (let el of this.elementsDOM) {\r\n            el.setHidden(false);\r\n            await sleep(150);\r\n        }\r\n    }\r\n}\r\n\r\nexport default List;","import React, {Component} from 'react';\r\nimport List from \"./List/List\";\r\n\r\n/** View for displaying test set by model (array, bubble, tree, ...) **/\r\nclass View extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            iterations: 0,\r\n        };\r\n        this.list = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        const {elements, className, active} = this.props;\r\n        const activeClass = (active) ? \"view-panel__view_active\" : \"\";\r\n        return (\r\n            <div className={`view-panel__view block ${activeClass}`}>\r\n                <List\r\n                    elements={elements}\r\n                    className={className}\r\n                    ref={this.list}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /** Show if active **/\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        let activeChanged = nextProps.active ^ this.props.active;\r\n        if (activeChanged) {\r\n            if (nextProps.active)   this.show();\r\n            else                    this.hide();\r\n        }\r\n    }\r\n\r\n    /****************************** LIST CONTROL ******************************/\r\n    hide        = () => { this.list.current.hideAll() };\r\n    show        = () => { this.list.current.showAll() };\r\n    showEvery   = () => { this.list.current.showEvery() };\r\n    passAll     = () => { this.list.current.passAll() };\r\n}\r\n\r\nexport default View;","import React, {Component} from 'react';\r\nimport './Thumbnail.css'\r\n/**\r\n * Thumbnail of {component} for demonstrate and selecting\r\n * **/\r\nclass Thumbnail extends Component {\r\n    render() {\r\n        const {active, src, label, disabled} = this.props;\r\n        const activeClass   = (active)   ? \"thumbnail_active\"   : \"\";\r\n        const disabledClass = (disabled) ? \"thumbnail_disabled\" : \"\";\r\n        return (\r\n            <div className={`thumbnail ${activeClass} ${disabledClass} b_unselectable`} onClick={this.onClick}>\r\n                <img className=\"thumbnail__img\" src={src} alt=\"\"/>\r\n                <p className=\"thumbnail__label\">{label}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onClick = () => {\r\n        if (!this.props.disabled) {\r\n            this.props.onClick(this.props.id);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Thumbnail;","import React, {Component} from 'react';\r\nimport Thumbnail from \"../../../components/View/Thumbnail/Thumbnail\";\r\nimport thumb_array from './view_array.jpg'\r\nimport thumb_bubble from './view_bubble.jpg'\r\nimport thumb_column from './view_column.jpg'\r\nimport {range} from \"../../../lib/utils/array\";\r\n\r\n\r\n/** Switch View **/\r\nclass ViewSwitcher extends Component {\r\n    state = {\r\n        active: this.props.active\r\n    };\r\n\r\n    render() {\r\n        const thumbnails = this.computeThumbnails();\r\n        return (\r\n            <div className=\"view-panel__switcher block\">\r\n                {thumbnails}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /** Get actual thumbnails **/\r\n    computeThumbnails = () => {\r\n        let labels = [\"Boxes View\", \"Creative View\", \"Column View\"];\r\n        let sources = [thumb_array, thumb_bubble, thumb_column];\r\n        let indices = range(labels.length);\r\n        return indices.map(i =>\r\n            <Thumbnail\r\n                disabled={i === 2}\r\n                key={i}\r\n                label={labels[i]}\r\n                src={sources[i]}\r\n                id={i}\r\n                active={this.state.active === i}\r\n                onClick={this.onClick}\r\n            />\r\n        )\r\n    };\r\n\r\n    /** Switch to new Thumbnail and View **/\r\n    onClick = (i) => {\r\n        this.setState({active: i});\r\n        this.props.onSwitch(i);\r\n    }\r\n}\r\n\r\nexport default ViewSwitcher;","import {sleep} from \"../utils/misc\";\r\nimport {swap} from \"../utils/array\";\r\n\r\n/** Get timeIntervalUnit by current speed **/\r\nfunction timeInterval(viewPanel, unit=400) {\r\n    return unit * (1 / viewPanel.state.speed);\r\n}\r\n\r\n/**\r\n * BubbleSort\r\n * Run and in realtime update views by controller\r\n **/\r\nasync function bubbleSort(controller, callback_finished) {\r\n    // Init args\r\n    let values      = controller.elements;\r\n    let views       = controller.views;\r\n    let lists       = views.map(e => e.current.list.current);\r\n    let arr         = values.slice();\r\n    // Sleep before Sort\r\n    await sleep(timeInterval(controller));\r\n\r\n    // Sort Hook\r\n    for (let i = 0; i < arr.length - 1; i++) {\r\n        for (let j = 0; j < arr.length - i - 1; j++) {\r\n            lists.forEach(l => l.setSelected(true, j, j + 1));          //  setSelected a[j] and a[j+1]\r\n            await sleep(timeInterval(controller));                      //  [WAIT] <Comparing>\r\n            if (arr[j].value >= arr[j + 1].value) {                     //  <Comparing> =>\r\n                lists.forEach(l => l.setActive(true, j, j + 1));        //      setActive swapped a[j] and a[j+1]\r\n                await sleep(timeInterval(controller));                  //      [WAIT] <Active>\r\n                swap(j, j + 1, arr, controller);                     //      <Swap>\r\n                await sleep(timeInterval(controller));                  //      [WAIT] <Swap> results\r\n            }\r\n            lists.forEach(l => l.reset(j, j + 1));                      //  reset Selected and Active\r\n        }\r\n        lists.forEach(l => l.setDisabled(true,arr.length - i - 1));     //  setDisabled last Array\r\n    }\r\n    // Reset all selection and passAll sorted array\r\n    lists.forEach(l => l.resetAll());\r\n    await sleep(timeInterval(controller) * 4);\r\n    lists.forEach(l => l.passAll());\r\n    // Callback for change state\r\n    callback_finished();\r\n}\r\n\r\nexport default bubbleSort","import React, {Component}   from 'react';\r\nimport ViewBar              from \"./ViewBar/ViewBar\";\r\nimport View                 from \"../../components/View/View\";\r\nimport ViewSwitcher         from \"./ViewSwticher/ViewSwitcher\";\r\nimport bubbleSort           from \"../../lib/sort/BubbleSort\";\r\nimport {getRandomArray}     from \"../../lib/utils/nums\";\r\nimport {range, swap}        from \"../../lib/utils/array\";\r\nimport './ViewPanel.css'\r\nimport '../../components/View/List/List.css'\r\nimport '../../components/View/Views/Array.css'\r\nimport '../../components/View/Views/Bubble.css'\r\n\r\n/** Base View Panel with sort displaying **/\r\nclass ViewPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            speed: 1,\r\n            count: 8,\r\n            active: 0,\r\n        };\r\n        this.DOM         = React.createRef();\r\n        this.arrayView   = React.createRef();\r\n        this.bubbleView  = React.createRef();\r\n\r\n        this.views       = [\r\n            this.arrayView,\r\n            this.bubbleView,\r\n        ];\r\n\r\n    }\r\n\r\n    // Generate array before render\r\n    componentWillMount() { this.handlerGenerate() }\r\n    // Pass on array after render\r\n    componentDidMount() { this.viewsPassAll() }\r\n\r\n    render() {\r\n        const views = this.computeViews();\r\n        return (\r\n            <div className=\"view-panel\" ref={this.DOM}>\r\n                <ViewBar\r\n                    onSort={this.handlerSort}\r\n                    onGenerate={this.handlerGenerate}\r\n                    onToggle={this.props.handlerToggle}\r\n                />\r\n                <div className=\"view-panel__canvas\">\r\n                    {views}\r\n                    <ViewSwitcher onSwitch={this.handlerSwitch} active={this.state.active}/>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /** Get actual views **/\r\n    computeViews = () => {\r\n        let classList = [\"array-list\", \"bubble-list\"];\r\n        let refList = [this.arrayView, this.bubbleView];\r\n        let indices = range(classList.length);\r\n        return indices.map(i =>\r\n            <View\r\n                key={i}\r\n                className={classList[i]}\r\n                active={this.state.active === i}\r\n                elements={this.elements}\r\n                speed={this.state.speed}\r\n                ref={refList[i]}\r\n                handlerSwap={this.handlerSwap}\r\n            />\r\n        )\r\n    };\r\n\r\n    /** Update testset if count updated **/\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        if (this.state.count !== nextState.count) {\r\n            this.elements = getRandomArray(nextState.count);\r\n        }\r\n    }\r\n\r\n    /** Pass all test set if updated **/\r\n    componentDidUpdate() {\r\n        if (!this.props.isSorting) { this.viewsPassAll() }\r\n    }\r\n\r\n    /****************************** METHODS SUMMARY ******************************/\r\n    // Views\r\n    viewsPassAll = () => { this.views.forEach(v => v.current.list.current.passAll()) }\r\n    // Settings\r\n    handlerCount = (count) => { this.setState({count: count}) };\r\n    handlerSpeed = (speed) => { this.setState({speed: speed}) };\r\n\r\n    /** Run generating **/\r\n    handlerGenerate = () => {\r\n        this.elements = getRandomArray(this.state.count);\r\n        this.setState(this.state);\r\n    };\r\n\r\n\r\n    /** Run sorting **/\r\n    handlerSort = () => {\r\n        // TODO: add Treesort!!!\r\n\r\n        if (!this.props.isSorting) {\r\n            const finish_sort = () => { this.props.handlerSort(false) };\r\n            bubbleSort(this, finish_sort);\r\n            this.props.handlerSort(true)\r\n        } else {\r\n            console.log(\"Array already is sorting!\");\r\n        }\r\n    };\r\n\r\n    /** Swap elements **/\r\n    handlerSwap = (i, j) => {\r\n        swap(i, j, this.elements);\r\n        this.setState(this.state);\r\n    };\r\n\r\n    /** Switch view **/\r\n    handlerSwitch = (newActive) => { this.setState({active: newActive}) };\r\n}\r\n\r\nexport default ViewPanel;","import React, {Component} from 'react';\r\nimport NavPanel from \"../../layouts/UserPanel/NavPanel\";\r\nimport './App.css'\r\nimport ViewPanel from \"../../layouts/ViewPanel/ViewPanel\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSorting:      false,\r\n            isMusicOn:      false,\r\n            areSoundsOn:    false,\r\n        };\r\n        this.viewPanel = React.createRef();\r\n        this.navPanel = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app-live-sort\">\r\n                <NavPanel\r\n                    isSorting={this.state.isSorting}\r\n                    handlerSpeed={this.handlerSetSpeed}\r\n                    handlerCount={this.handlerSetCount}\r\n                    handlerToggle={this.handlerToggle}\r\n                    ref={this.navPanel}\r\n                />\r\n                <ViewPanel\r\n                    isSorting={this.state.isSorting}\r\n                    handlerSort={this.handlerSort}\r\n                    handlerToggle={this.handlerToggle}\r\n                    ref={this.viewPanel}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /****************************** FUNCTIONALYTY ******************************/\r\n\r\n    /** Toggle NavPanel **/\r\n    handlerToggle = () => {\r\n        // https://www.w3schools.com/howto/howto_js_sidenav.asp\r\n        // https://www.w3schools.com/howto/tryit.asp?filename=tryhow_js_sidenav_push_opacity\r\n\r\n        const NAV_DOM  = this.navPanel.current.DOM.current;\r\n        const VIEW_DOM = this.viewPanel.current.DOM.current;\r\n\r\n        VIEW_DOM.classList.toggle(\"view-panel_nav_visible\");\r\n        NAV_DOM.classList.toggle(\"nav-panel_visible\");\r\n    };\r\n\r\n    /** Set count of elements **/\r\n    handlerSetCount = (count) => { this.viewPanel.current.handlerCount(count) };\r\n    /** Set speed for sorting **/\r\n    handlerSetSpeed = (speed) => { this.viewPanel.current.handlerSpeed(speed) };\r\n    /** Run Sort **/\r\n    handlerSort = (isSorting) => { this.setState({isSorting: isSorting}) }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { render } from \"react-static-generator\";\r\nimport './css/reset.min.css'\r\nimport './index.css'\r\nimport App from \"./components/App/App\";\r\n\r\n/** Мои комментарии по тестовой работе:\r\n * Работу делал суммарно 4 дня.\r\n * За это время мне удалось выполнить все пункты из ТЗ, но, увы, не все пункты из моих личных требований.\r\n * Из-за сбивчивого режима работы в эти дни, я, к сожалению не успел реализовать:\r\n * - Выбор сортировки (по умолчанию - пузырьком). Хотелось добавить сортировку деревом и еще какую-нибудь пробную\r\n * - Динамические размеры элементов - хотелось добавить возможность отображения размеров элементов\r\n *   в списке, в зависимости от их значения (1 - 20%, 2 - 40%, ... )\r\n * - Column View - просмотр элементов в виде столбиков\r\n * - Прелоадер перед загрузкой сайта\r\n * - Переключать en/ru\r\n * - Счетчик итераций\r\n * - Звуки (клик, наведение)\r\n * - Режим паузы для сортировки\r\n * Так же, увы, не удалось до конца оптимизировать рендеринг элементов в списке и прочих компонентов\r\n * Не успел добавить и другие настройки для более приятного просмотра\r\n *\r\n * Если же вы дочитали до этого момента - то выражаю безумную признательность за потраченное время\r\n * К работе постарался подойти максимально творчески - поэтому, надеюсь, что вам понравилось, в конечном счете :)\r\n * **/\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));\r\n/*\r\nrender(\r\n    <App/>,\r\n    document.getElementById('root')\r\n);*/\r\n"],"sourceRoot":""}